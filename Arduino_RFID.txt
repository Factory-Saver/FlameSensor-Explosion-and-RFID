#include <SPI.h>
#include <MFRC522.h>
#include <Wire.h>   
#include <LiquidCrystal_I2C.h>  

LiquidCrystal_I2C lcd(0x27, 16, 2);
/* mfrc522 
 *  3.3v gray outer yellow
 *  rst violet yellow
 *  gnd orange red
 *  miso white white 
 *  mosi blue dirty white
 *  sck violet blue
 *  sda brown violet
 * 
 */
#define SS_PIN 10
#define RST_PIN 9
#define LED_G 2 //define green LED pin
#define LED_O 1 //define red LED
#define LED_R 3
#define BUZZER 4
MFRC522 mfrc522(SS_PIN, RST_PIN);   // Create MFRC522 instance.
 
void setup() 
{
  lcd.init();
  lcd.backlight();
  Serial.begin(9600);
  Serial.begin(9600);   // Initiate a serial communication
  SPI.begin();      // Initiate  SPI bus
  mfrc522.PCD_Init();   // Initiate MFRC522
  pinMode(LED_G, OUTPUT);
  pinMode(LED_O, OUTPUT);
  pinMode(LED_R, OUTPUT);
  pinMode(BUZZER, OUTPUT);
  noTone(BUZZER);
  Serial.println("Put your card to the reader...");
  Serial.println();

}
void loop() 
{ 
  lcd.setCursor(3,0);
  lcd.println("Welcome to    ");
  lcd.setCursor(2,1);
  lcd.println("Factory Saver!   ");
  // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent()) 
  {
    return;
  }
  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
    return;
  }
  //Show UID on serial monitor
  Serial.print("UID tag :");
  String content= "";
  byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
     Serial.print(mfrc522.uid.uidByte[i], HEX);
     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
     content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.println();
  Serial.print("Message : ");
  content.toUpperCase();
  if (content.substring(1) == "4B 09 42 0A"){ //change here the UID of the card/cards that you want to give access
    lcd.clear();
    lcd.setCursor(1,0);
    lcd.println("Access Granted!   ");
    lcd.setCursor(1,1);
    lcd.println("EID: Employee1!    ");
    digitalWrite(LED_G , HIGH);
    digitalWrite(LED_O , HIGH);
    digitalWrite(LED_R , LOW);
    tone(BUZZER, 500);
    delay(1000);
    noTone(BUZZER);
    delay(3000);
    digitalWrite(LED_G , LOW);
    lcd.clear();
  }
  else if (content.substring(1) == "42 1E 49 4B" ){
    lcd.clear();
    lcd.setCursor(1,0);
    lcd.println("Access Granted!   ");
    lcd.setCursor(1,1);
    lcd.println("EID: Employee2    ");
    digitalWrite(LED_G , HIGH);
    digitalWrite(LED_O , HIGH);
    digitalWrite(LED_R , LOW);
    tone(BUZZER, 500);
    delay(1000);
    noTone(BUZZER);
    delay(3000);
    digitalWrite(LED_G , LOW);
    lcd.clear();
  }
  else if(content.substring(1) != "4B 09 42 0A" || content.substring(1) != "42 1E 49 4B" ){
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.println("Access Denied!  ");
    digitalWrite(LED_G , LOW);
    digitalWrite(LED_O , HIGH);
    digitalWrite(LED_R , HIGH);
    tone(BUZZER, 300);
    delay(1000);
    noTone(BUZZER);
    delay(3000);
    digitalWrite(LED_R , LOW);
    lcd.clear();
 }
 
 else   {
    digitalWrite(LED_G , LOW);
    digitalWrite(LED_O , HIGH);
    digitalWrite(LED_R , LOW);
  }
} 